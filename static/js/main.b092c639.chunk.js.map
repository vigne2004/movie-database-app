{"version":3,"sources":["components/Header/index.js","components/MovieGrid/index.js","components/Pagination/index.js","components/Popular/index.js","components/TopRated/index.js","components/Upcoming/index.js","components/SearchedMovies/index.js","components/CastItem/index.js","components/SingleMoviePage/index.js","App.js","index.js"],"names":["Header","_useState","useState","_useState2","_slicedToArray","userInput","setSearchInput","history","useHistory","_jsxs","className","children","_jsx","Link","to","type","value","onChange","event","target","placeholder","onKeyDown","key","push","concat","onClick","disabled","LuSearch","MovieGrid","_ref","movies","map","movie","src","poster_path","alt","title","vote_average","id","Pagination","prevPages","page","nextPage","_Fragment","PopularPage","popularMovies","setPopularMovies","_useState3","_useState4","heading","setHeading","_useState5","_useState6","setPage","fetchMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","pageNo","getPopularMoviesURL","response","data","wrap","_context","prev","next","fetch","sent","json","results","t0","console","error","stop","_x","apply","arguments","useEffect","topRatedMoviesURL","UpcomingPage","upcomingMoviesURL","SearchedMoviePage","setMovies","query","useParams","fetchSearchedMovies","searchQuery","url","log","_x2","CastItem","details","profile_path","name","original_name","character","apiKey","SingleMoviePage","setMovie","cast","setCast","movieId","fetchMovieDetails","fetchCastDetails","_ref2","_callee2","castUrl","_context2","runtime","genres","each","release_date","overview","length","artist","App","Switch","Route","exact","path","component","TopRatedPage","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.b092c639.chunk.js","sourcesContent":["import {Link, useHistory} from 'react-router-dom'\nimport {useState} from 'react'\nimport {LuSearch} from 'react-icons/lu'\nimport './index.css'\n\nconst Header = () => {\n  const [userInput, setSearchInput] = useState('')\n  const history = useHistory()\n\n  const handleSearch = () => {\n    history.push(`/search/${userInput}`)\n    setSearchInput('')\n  }\n\n  const addSearch = event => {\n    setSearchInput(event.target.value)\n  }\n\n  const submitSearch = event => {\n    if (event.key === 'Enter') {\n      history.push(`/search/${userInput}`)\n      setSearchInput('')\n    }\n  }\n\n  return (\n    <nav className=\"nav-bar\">\n      <h1 className=\"nav-heading\">MovieDB</h1>\n      <div className=\"nav-cont\">\n        <ul className=\"link-text-cont\">\n          <li>\n            <Link className=\"list\" to=\"/movie-database-app\">\n              Popular\n            </Link>\n          </li>\n\n          <li>\n            <Link className=\"list\" to=\"/top-rated\">\n              Top Rated\n            </Link>\n          </li>\n\n          <li>\n            <Link className=\"list\" to=\"/upcoming\">\n              Upcoming\n            </Link>\n          </li>\n        </ul>\n\n        <div className=\"search-cont\">\n          <input\n            type=\"text\"\n            value={userInput}\n            onChange={addSearch}\n            className=\"search-input\"\n            placeholder=\"Search Query\"\n            onKeyDown={submitSearch}\n          />\n          <button\n            type=\"button\"\n            onClick={handleSearch}\n            className=\"search-btn\"\n            disabled={userInput === ''}\n          >\n            <LuSearch />\n          </button>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Header\n","import {useHistory} from 'react-router-dom'\nimport './index.css'\n\nconst MovieGrid = ({movies}) => {\n  const history = useHistory()\n\n  return (\n    <div className=\"movie-grid\">\n      {movies.map(movie => (\n        <div key={movie.id} className=\"movie-card\">\n          <img\n            src={`https://image.tmdb.org/t/p/w185${movie.poster_path}`}\n            alt={movie.title}\n            className=\"movie-image\"\n          />\n          <div className=\"text-cont\">\n            <div>\n              <h3 className=\"movie-title\">{movie.title}</h3>\n              <p className=\"movie-rating\">Rating: {movie.vote_average}</p>\n            </div>\n            <button\n              type=\"button\"\n              onClick={() => history.push(`/movie/${movie.id}`)}\n              className=\"view-btn\"\n            >\n              View Details\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default MovieGrid\n","import './index.css'\r\n\r\nconst Pagination = ({prevPages, page, nextPage}) => (\r\n  <>\r\n    <button type=\"button\" onClick={() => prevPages()} className=\"page-btn\">\r\n      Prev\r\n    </button>\r\n\r\n    <p className=\"page-text\">{page}</p>\r\n\r\n    <button type=\"button\" onClick={() => nextPage()} className=\"page-btn\">\r\n      Next\r\n    </button>\r\n  </>\r\n)\r\nexport default Pagination\r\n","import {useState, useEffect} from 'react'\nimport './index.css'\n\nimport MovieGrid from '../MovieGrid'\nimport Pagination from '../Pagination'\n\nconst apiKey = '34b5ec33892c4bd7b7696c6e7ffa8c1b'\n\nconst PopularPage = () => {\n  const [popularMovies, setPopularMovies] = useState([])\n  const [heading, setHeading] = useState('Loading...')\n  const [page, setPage] = useState(1)\n\n  const fetchMovies = async pageNo => {\n    try {\n      const getPopularMoviesURL = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=${pageNo}`\n      const response = await fetch(getPopularMoviesURL)\n      const data = await response.json()\n      if (data.results) {\n        setPopularMovies(data.results)\n        setHeading('Popular Movies') // Set the heading to 'Popular' once the data is fetched\n      }\n    } catch (error) {\n      console.error('Error fetching movies:', error)\n      setHeading('Failed to load popular movies')\n    }\n  }\n\n  useEffect(() => {\n    fetchMovies(page)\n  }, [page])\n\n  const prevPages = () => {\n    if (page > 1) setPage(prev => prev - 1)\n  }\n\n  return (\n    <div className=\"popular-movies\">\n      <h1 className=\"movies-heading\">{heading}</h1> {/* Dynamic heading */}\n      <MovieGrid movies={popularMovies} />\n      <div className=\"pagination-cont\">\n        <Pagination\n          prevPages={prevPages}\n          page={page}\n          nextPage={() => setPage(prev => prev + 1)}\n        />\n      </div>\n    </div>\n  )\n}\nexport default PopularPage\n","import {useState, useEffect} from 'react'\n\nimport MovieGrid from '../MovieGrid'\nimport Pagination from '../Pagination'\n\nconst apiKey = '34b5ec33892c4bd7b7696c6e7ffa8c1b'\n\nconst PopularPage = () => {\n  const [popularMovies, setPopularMovies] = useState([])\n  const [heading, setHeading] = useState('Loading...')\n  const [page, setPage] = useState(1)\n\n  const fetchMovies = async pageNo => {\n    try {\n      const topRatedMoviesURL = `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US&page=${pageNo}`\n      const response = await fetch(topRatedMoviesURL)\n      const data = await response.json()\n      if (data.results) {\n        setPopularMovies(data.results)\n        setHeading('Top Rated Movies') // Set the heading to 'Popular' once the data is fetched\n      }\n    } catch (error) {\n      console.error('Error fetching movies:', error)\n      setHeading('Failed to load popular movies')\n    }\n  }\n\n  useEffect(() => {\n    fetchMovies(page)\n  }, [page])\n\n  const prevPages = () => {\n    if (page > 1) setPage(prev => prev - 1)\n  }\n\n  return (\n    <div className=\"popular-movies\">\n      <h1 className=\"movies-heading\">{heading}</h1> {/* Dynamic heading */}\n      <MovieGrid movies={popularMovies} />\n      <div className=\"pagination-cont\">\n        <Pagination\n          prevPages={prevPages}\n          page={page}\n          nextPage={() => setPage(prev => prev + 1)}\n        />\n      </div>\n    </div>\n  )\n}\nexport default PopularPage\n","import {useState, useEffect} from 'react'\n\nimport MovieGrid from '../MovieGrid'\nimport Pagination from '../Pagination'\n\nconst apiKey = '34b5ec33892c4bd7b7696c6e7ffa8c1b'\n\nconst UpcomingPage = () => {\n  const [popularMovies, setPopularMovies] = useState([])\n  const [heading, setHeading] = useState('Loading...')\n  const [page, setPage] = useState(1)\n\n  const fetchMovies = async pageNo => {\n    try {\n      const upcomingMoviesURL = `https://api.themoviedb.org/3/movie/upcoming?api_key=${apiKey}&language=en-US&page=${pageNo}`\n      const response = await fetch(upcomingMoviesURL)\n      const data = await response.json()\n      if (data.results) {\n        setPopularMovies(data.results)\n        setHeading('Upcoming Movies') // Set the heading to 'Popular' once the data is fetched\n      }\n    } catch (error) {\n      console.error('Error fetching movies:', error)\n      setHeading('Failed to load popular movies')\n    }\n  }\n\n  useEffect(() => {\n    fetchMovies(page)\n  }, [page])\n\n  const prevPages = () => {\n    if (page > 1) setPage(prev => prev - 1)\n  }\n\n  return (\n    <div className=\"popular-movies\">\n      <h1 className=\"movies-heading\">{heading}</h1> {/* Dynamic heading */}\n      <MovieGrid movies={popularMovies} />\n      <div className=\"pagination-cont\">\n        <Pagination\n          prevPages={prevPages}\n          page={page}\n          nextPage={() => setPage(prev => prev + 1)}\n        />\n      </div>\n    </div>\n  )\n}\nexport default UpcomingPage\n","import {useState, useEffect} from 'react'\nimport {useParams} from 'react-router-dom'\n\nimport MovieGrid from '../MovieGrid'\nimport Pagination from '../Pagination'\n\nconst apiKey = '34b5ec33892c4bd7b7696c6e7ffa8c1b'\n\nconst SearchedMoviePage = () => {\n  const [movies, setMovies] = useState([])\n  const [heading, setHeading] = useState('Loading...')\n  const [page, setPage] = useState(1)\n  const {query} = useParams()\n\n  const fetchSearchedMovies = async (pageNo, searchQuery) => {\n    try {\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${searchQuery}&page=${pageNo}`\n      const response = await fetch(url)\n      const data = await response.json()\n      setMovies(data.results || [])\n      setHeading('Searched Movies')\n    } catch (error) {\n      console.log('Movies fetch was failed: ', error)\n    }\n  }\n\n  useEffect(() => {\n    fetchSearchedMovies(page, query)\n  }, [query, page])\n\n  const prevPages = () => {\n    if (page > 1) setPage(prev => prev - 1)\n  }\n\n  return (\n    <div className=\"popular-movies\">\n      <h1 className=\"movies-heading\">{heading}</h1> {/* Dynamic heading */}\n      <MovieGrid movies={movies} />\n      <div className=\"pagination-cont\">\n        <Pagination\n          prevPages={prevPages}\n          page={page}\n          nextPage={() => setPage(prev => prev + 1)}\n        />\n      </div>\n    </div>\n  )\n}\nexport default SearchedMoviePage\n","import './index.css'\n\nconst CastItem = ({details}) => (\n  <li className=\"list-cont\">\n    <img\n      className=\"cast-img\"\n      src={`https://image.tmdb.org/t/p/original${details.profile_path}`}\n      alt={details.name}\n    />\n    <div>\n      <h1 className=\"org-name\">{details.original_name}</h1>\n      <h1 className=\"name\">{details.character}</h1>\n    </div>\n  </li>\n)\nexport default CastItem\n","import {useState, useEffect} from 'react'\nimport {useParams} from 'react-router-dom'\n\nimport CastItem from '../CastItem'\nimport './index.css'\n\nconst apiKey = '34b5ec33892c4bd7b7696c6e7ffa8c1b'\n\nconst SingleMoviePage = () => {\n  const [movie, setMovie] = useState({})\n  const [cast, setCast] = useState([])\n  const {movieId} = useParams()\n\n  const fetchMovieDetails = async id => {\n    try {\n      const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\n      const response = await fetch(url)\n      const data = await response.json()\n      setMovie(data)\n    } catch (error) {\n      console.log('Error fetching Movie Details:', error)\n    }\n  }\n\n  const fetchCastDetails = async id => {\n    try {\n      const castUrl = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}&language=en-US`\n      const response = await fetch(castUrl)\n      const data = await response.json()\n      setCast(data.cast)\n    } catch (error) {\n      console.log(\"Movie's cast not fetched\", error)\n    }\n  }\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n    fetchCastDetails(movieId)\n  }, [movieId])\n\n  const renderMovieDetails = () => (\n    <div className=\"movie-cont\">\n      <img\n        className=\"poster\"\n        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n        alt={movie.title}\n      />\n      <div className=\"movie-content\">\n        <h1 className=\"movie-heading\">{movie.title}</h1>\n        <p className=\"rating\">Ratings: {movie.vote_average}</p>\n        <p className=\"duration\">Duration: {movie.runtime} min</p>\n        <ul className=\"genre-list\">\n          {movie.genres.map(each => (\n            <li key={each.id} className=\"genre\">\n              {each.name}\n            </li>\n          ))}\n        </ul>\n        <p className=\"release-date\">Release Date: {movie.release_date}</p>\n        <p className=\"movie-overview\">{movie.overview}</p>\n      </div>\n    </div>\n  )\n\n  const renderCastDetails = () => (\n    <div className=\"cast-cont\">\n      <ul className=\"cast-list-cont\">\n        {cast.map(artist => (\n          <CastItem key={artist.id} details={artist} />\n        ))}\n      </ul>\n    </div>\n  )\n\n  return (\n    <div className=\"movie-page\">\n      {movie ? (\n        <>\n          {'genres' in movie && renderMovieDetails()}\n          {cast.length !== 0 && <h1 className=\"cast-heading\">Cast Details</h1>}\n          {renderCastDetails()}\n        </>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  )\n}\nexport default SingleMoviePage\n","import {Switch, Route} from 'react-router-dom'\n\nimport Header from './components/Header'\nimport PopularPage from './components/Popular'\nimport TopRatedPage from './components/TopRated'\nimport UpcomingPage from './components/Upcoming'\nimport SearchedMoviePage from './components/SearchedMovies'\nimport SingleMoviePage from './components/SingleMoviePage'\n\nimport './App.css'\n\nconst App = () => (\n  <>\n    <Header />\n    <Switch>\n      <Route exact path=\"/movie-database-app\" component={PopularPage} />\n      <Route exact path=\"/top-rated\" component={TopRatedPage} />\n      <Route exact path=\"/upcoming\" component={UpcomingPage} />\n      <Route exact path=\"/search/:query\" component={SearchedMoviePage} />\n      <Route exact path=\"/movie/:movieId\" component={SingleMoviePage} />\n    </Switch>\n  </>\n)\n\nexport default App\n","import {BrowserRouter} from 'react-router-dom'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}