{"version":3,"sources":["components/Header/index.js","components/MovieGrid/index.js","components/Popular/index.js","components/TopRated/index.js","components/Upcoming/index.js","components/SearchedMovies/index.js","components/CastItem/index.js","components/SingleMoviePage/index.js","App.js","index.js"],"names":["Header","_useState","useState","_useState2","_slicedToArray","userInput","setSearchInput","history","useHistory","_jsxs","className","children","_jsx","Link","to","type","value","onChange","event","target","placeholder","onKeyDown","key","push","concat","onClick","disabled","LuSearch","MovieGrid","_ref","movies","map","movie","src","poster_path","alt","title","vote_average","id","getPopularMoviesURL","PopularPage","popularMovies","setPopularMovies","_useState3","_useState4","heading","setHeading","fetchMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","results","t0","console","error","stop","apply","arguments","useEffect","topRatedMoviesURL","upcomingMoviesURL","UpcomintPage","SearchedMoviePage","setMovies","query","useParams","fetchSearchedMovies","useCallback","url","log","CastItem","details","profile_path","name","original_name","character","apiKey","SingleMoviePage","setMovie","cast","setCast","movieId","fetchMovieDetails","_x","fetchCastDetails","_ref2","_callee2","castUrl","_context2","_x2","_Fragment","runtime","genres","each","release_date","overview","length","artist","App","Switch","Route","exact","path","component","TopRatedPage","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.345b05c0.chunk.js","sourcesContent":["import {Link, useHistory} from 'react-router-dom'\nimport {useState} from 'react'\nimport {LuSearch} from 'react-icons/lu'\nimport './index.css'\n\nconst Header = () => {\n  const [userInput, setSearchInput] = useState('')\n  const history = useHistory()\n\n  const handleSearch = () => {\n    history.push(`/search/${userInput}`)\n    setSearchInput('')\n  }\n\n  const addSearch = event => {\n    setSearchInput(event.target.value)\n  }\n\n  const submitSearch = event => {\n    if (event.key === 'Enter') {\n      history.push(`/search/${userInput}`)\n      setSearchInput('')\n    }\n  }\n\n  return (\n    <nav className=\"nav-bar\">\n      <h1 className=\"nav-heading\">MovieDB</h1>\n      <div className=\"nav-cont\">\n        <ul className=\"link-text-cont\">\n          <li>\n            <Link className=\"list\" to=\"/movie-database-app\">\n              Popular\n            </Link>\n          </li>\n\n          <li>\n            <Link className=\"list\" to=\"/top-rated\">\n              Top Rated\n            </Link>\n          </li>\n\n          <li>\n            <Link className=\"list\" to=\"/upcoming\">\n              Upcoming\n            </Link>\n          </li>\n        </ul>\n\n        <div className=\"search-cont\">\n          <input\n            type=\"text\"\n            value={userInput}\n            onChange={addSearch}\n            className=\"search-input\"\n            placeholder=\"Search Query\"\n            onKeyDown={submitSearch}\n          />\n          <button\n            type=\"button\"\n            onClick={handleSearch}\n            className=\"search-btn\"\n            disabled={userInput === ''}\n          >\n            <LuSearch />\n          </button>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Header\n","import {useHistory} from 'react-router-dom'\nimport './index.css'\n\nconst MovieGrid = ({movies}) => {\n  const history = useHistory()\n\n  return (\n    <div className=\"movie-grid\">\n      {movies.map(movie => (\n        <div key={movie.id} className=\"movie-card\">\n          <img\n            src={`https://image.tmdb.org/t/p/w185${movie.poster_path}`}\n            alt={movie.title}\n            className=\"movie-image\"\n          />\n          <div className=\"text-cont\">\n            <div>\n              <h3 className=\"movie-title\">{movie.title}</h3>\n              <p className=\"movie-rating\">Rating: {movie.vote_average}</p>\n            </div>\n            <button\n              type=\"button\"\n              onClick={() => history.push(`/movie/${movie.id}`)}\n              className=\"view-btn\"\n            >\n              View Details\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default MovieGrid\n","import {useState, useEffect} from 'react'\nimport './index.css'\n\nimport MovieGrid from '../MovieGrid'\n\nconst apiKey = '34b5ec33892c4bd7b7696c6e7ffa8c1b'\nconst getPopularMoviesURL = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}&language=en-US&page=1`\n\nconst PopularPage = () => {\n  const [popularMovies, setPopularMovies] = useState([])\n  const [heading, setHeading] = useState('Loading...')\n\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch(getPopularMoviesURL)\n      const data = await response.json()\n      if (data.results) {\n        setPopularMovies(data.results)\n        setHeading('Popular Movies') // Set the heading to 'Popular' once the data is fetched\n      }\n    } catch (error) {\n      console.error('Error fetching movies:', error)\n      setHeading('Failed to load popular movies')\n    }\n  }\n\n  useEffect(() => {\n    fetchMovies()\n  }, [])\n\n  return (\n    <div className=\"popular-movies\">\n      <h1 className=\"movies-heading\">{heading}</h1> {/* Dynamic heading */}\n      <MovieGrid movies={popularMovies} />\n    </div>\n  )\n}\nexport default PopularPage\n","import {useState, useEffect} from 'react'\n\nimport MovieGrid from '../MovieGrid'\n\nconst apiKey = '34b5ec33892c4bd7b7696c6e7ffa8c1b'\nconst topRatedMoviesURL = `https://api.themoviedb.org/3/movie/top_rated?api_key=${apiKey}&language=en-US&page=1`\n\nconst PopularPage = () => {\n  const [popularMovies, setPopularMovies] = useState([])\n  const [heading, setHeading] = useState('Loading...')\n\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch(topRatedMoviesURL)\n      const data = await response.json()\n      if (data.results) {\n        setPopularMovies(data.results)\n        setHeading('Top Rated Movies') // Set the heading to 'Popular' once the data is fetched\n      }\n    } catch (error) {\n      console.error('Error fetching movies:', error)\n      setHeading('Failed to load popular movies')\n    }\n  }\n\n  useEffect(() => {\n    fetchMovies()\n  }, [])\n\n  return (\n    <div className=\"popular-movies\">\n      <h1 className=\"movies-heading\">{heading}</h1> {/* Dynamic heading */}\n      <MovieGrid movies={popularMovies} />\n    </div>\n  )\n}\nexport default PopularPage\n","import {useState, useEffect} from 'react'\n\nimport MovieGrid from '../MovieGrid'\n\nconst apiKey = '34b5ec33892c4bd7b7696c6e7ffa8c1b'\nconst upcomingMoviesURL = `https://api.themoviedb.org/3/movie/upcoming?api_key=${apiKey}&language=en-US&page=1`\n\nconst UpcomintPage = () => {\n  const [popularMovies, setPopularMovies] = useState([])\n  const [heading, setHeading] = useState('Loading...')\n\n  const fetchMovies = async () => {\n    try {\n      const response = await fetch(upcomingMoviesURL)\n      const data = await response.json()\n      if (data.results) {\n        setPopularMovies(data.results)\n        setHeading('Upcoming Movies') // Set the heading to 'Popular' once the data is fetched\n      }\n    } catch (error) {\n      console.error('Error fetching movies:', error)\n      setHeading('Failed to load popular movies')\n    }\n  }\n\n  useEffect(() => {\n    fetchMovies()\n  }, [])\n\n  return (\n    <div className=\"popular-movies\">\n      <h1 className=\"movies-heading\">{heading}</h1> {/* Dynamic heading */}\n      <MovieGrid movies={popularMovies} />\n    </div>\n  )\n}\nexport default UpcomintPage\n","import {useState, useEffect, useCallback} from 'react'\nimport {useParams} from 'react-router-dom'\n\nimport MovieGrid from '../MovieGrid'\n\nconst apiKey = '34b5ec33892c4bd7b7696c6e7ffa8c1b'\n\nconst SearchedMoviePage = () => {\n  const [movies, setMovies] = useState([])\n  const [heading, setHeading] = useState('Loading...')\n  const {query} = useParams()\n\n  const fetchSearchedMovies = useCallback(async () => {\n    try {\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1`\n      const response = await fetch(url)\n      const data = await response.json()\n      setMovies(data.results || [])\n      setHeading('Searched Movies')\n    } catch (error) {\n      console.log('Movies fetch was failed: ', error)\n    }\n  }, [query])\n\n  useEffect(() => {\n    fetchSearchedMovies()\n  }, [query, fetchSearchedMovies])\n\n  return (\n    <div className=\"popular-movies\">\n      <h1 className=\"movies-heading\">{heading}</h1> {/* Dynamic heading */}\n      <MovieGrid movies={movies} />\n    </div>\n  )\n}\nexport default SearchedMoviePage\n","import './index.css'\n\nconst CastItem = ({details}) => (\n  <li className=\"list-cont\">\n    <img\n      className=\"cast-img\"\n      src={`https://image.tmdb.org/t/p/original${details.profile_path}`}\n      alt={details.name}\n    />\n    <div>\n      <h1 className=\"org-name\">{details.original_name}</h1>\n      <h1 className=\"name\">{details.character}</h1>\n    </div>\n  </li>\n)\nexport default CastItem\n","import {useState, useEffect} from 'react'\nimport {useParams} from 'react-router-dom'\n\nimport CastItem from '../CastItem'\nimport './index.css'\n\nconst apiKey = '34b5ec33892c4bd7b7696c6e7ffa8c1b'\n\nconst SingleMoviePage = () => {\n  const [movie, setMovie] = useState({})\n  const [cast, setCast] = useState([])\n  const {movieId} = useParams()\n\n  const fetchMovieDetails = async id => {\n    try {\n      const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\n      const response = await fetch(url)\n      const data = await response.json()\n      setMovie(data)\n    } catch (error) {\n      console.log('Error fetching Movie Details:', error)\n    }\n  }\n\n  const fetchCastDetails = async id => {\n    try {\n      const castUrl = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}&language=en-US`\n      const response = await fetch(castUrl)\n      const data = await response.json()\n      setCast(data.cast)\n    } catch (error) {\n      console.log(\"Movie's cast not fetched\", error)\n    }\n  }\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n    fetchCastDetails(movieId)\n  }, [movieId])\n\n  const renderMovieDetails = () => (\n    <div className=\"movie-cont\">\n      <img\n        className=\"poster\"\n        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n        alt={movie.title}\n      />\n      <div className=\"movie-content\">\n        <h1 className=\"movie-heading\">{movie.title}</h1>\n        <p className=\"rating\">Ratings: {movie.vote_average}</p>\n        <p className=\"duration\">Duration: {movie.runtime} min</p>\n        <ul className=\"genre-list\">\n          {movie.genres.map(each => (\n            <li key={each.id} className=\"genre\">\n              {each.name}\n            </li>\n          ))}\n        </ul>\n        <p className=\"release-date\">Release Date: {movie.release_date}</p>\n        <p className=\"movie-overview\">{movie.overview}</p>\n      </div>\n    </div>\n  )\n\n  const renderCastDetails = () => (\n    <div className=\"cast-cont\">\n      <ul className=\"cast-list-cont\">\n        {cast.map(artist => (\n          <CastItem key={artist.id} details={artist} />\n        ))}\n      </ul>\n    </div>\n  )\n\n  return (\n    <div className=\"movie-page\">\n      {movie ? (\n        <>\n          {'genres' in movie && renderMovieDetails()}\n          {cast.length !== 0 && <h1 className=\"cast-heading\">Cast Details</h1>}\n          {renderCastDetails()}\n        </>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  )\n}\nexport default SingleMoviePage\n","import {Switch, Route} from 'react-router-dom'\n\nimport Header from './components/Header'\nimport PopularPage from './components/Popular'\nimport TopRatedPage from './components/TopRated'\nimport UpcomintPage from './components/Upcoming'\nimport SearchedMoviePage from './components/SearchedMovies'\nimport SingleMoviePage from './components/SingleMoviePage'\n\nimport './App.css'\n\nconst App = () => (\n  <>\n    <Header />\n    <Switch>\n      <Route exact path=\"/movie-database-app\" component={PopularPage} />\n      <Route exact path=\"/top-rated\" component={TopRatedPage} />\n      <Route exact path=\"/upcoming\" component={UpcomintPage} />\n      <Route exact path=\"/search/:query\" component={SearchedMoviePage} />\n      <Route exact path=\"/movie/:movieId\" component={SingleMoviePage} />\n    </Switch>\n  </>\n)\n\nexport default App\n","import {BrowserRouter} from 'react-router-dom'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}